>>> add_integer = __import__("0-add_integer").add_integer
>>> add_integer(1, 2)
3
>>> add_integer()
Traceback (most recent call last):
  File "/home/fugu/holbertonschool-higher_level_programming/python-test_driven_development/./0-main.py", line 5, in <module>
    print(add_integer())
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(2, 2.1)
4
>>> add_integer(1, "salam")
Traceback (most recent call last):
  File "/home/fugu/holbertonschool-higher_level_programming/python-test_driven_development/./0-main.py", line 5, in <module>
    print(add_integer(1, "salam"))
  File "/home/fugu/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 8, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(float('inf'), float('inf'))
Traceback (most recent call last):
  File "/home/fugu/holbertonschool-higher_level_programming/python-test_driven_development/./0-main.py", line 5, in <module>
    print(add_integer(float('inf'), float('inf')))
  File "/home/fugu/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 9, in add_integer
    return int(a + b)
OverflowError: cannot convert float infinity to integer
>>> add_integer(2)
100